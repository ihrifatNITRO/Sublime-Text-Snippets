<snippet>
	<content><![CDATA[
   
#define mx 10000
int value[mx][mx];
int cost[mx][mx]; // all the cost on each grid is 0
// to get all grids cost
void mini_cost(int row , int col){
   // a[0][0] has cost[0][0] = a[0][0]
   cost[0][0] = value[0][0];
   // getting 1st row's costs
   for(int i=1;i<col;i++){
      cost[0][i] = cost[0][i-1] + value[0][i];
   }
   // getting 1st col's costs
   for(int i=1;i<row;i++){
      cost[i][0] = cost[i-1][0] + value[i][0];
   }
   // getting costs of all values, which are 0
   for(int i=0;i<row;i++){
      for(int j=0;j<col;j++){
         if(cost[i][j] == 0){
            cost[i][j] = min(cost[i-1][j] , cost[i][j-1]) + value[i][j];
         }
      }
   }
}
// ans is - cout << cost[x][y];
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>dp_2d_mini_cost</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
